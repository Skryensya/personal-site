---
import { ViewTransitions } from 'astro:transitions';
import BaseHead, { type Props as HeadProps } from '../components/BaseHead.astro';
import Header from '../components/Header.astro';

export type Props = HeadProps & { showHeader?: boolean; headerTitle?: string, headerSubtitle?: string };

const { showHeader = true, headerTitle = null, headerSubtitle = null,  ...head } = Astro.props;
---

<!doctype html>
<html lang="en" class="antialiased break-words">
    <head>
        <BaseHead {...head} />
        <script>
            // Fast theme initialization - CSS handles all styling
            function applyTheme(themeId, isDark) {
                document.documentElement.setAttribute('data-theme', themeId);
                document.documentElement.classList.toggle('dark', isDark);
            }

            // Load and apply saved theme immediately
            const savedMode = localStorage.getItem('theme-mode') || 'light';
            const savedTheme = localStorage.getItem('theme-id') || 'void';
            
            applyTheme(savedTheme, savedMode === 'dark');

            // Color animation for Prism theme
            let mainHue = 0;
            function updateColorSystem() {
                mainHue = (mainHue + 0.5) % 360;
                document.documentElement.style.setProperty('--main-hue', mainHue.toFixed(2));
                requestAnimationFrame(updateColorSystem);
            }
            updateColorSystem();
        </script>
        <ViewTransitions />
    </head>
    <body class="bg-secondary text-main md:px-10 (--max-w-size:1280px) max-w-[var(--max-w-size)] mx-auto relative">
        <Header />
        <div  >
            <main class="text-left px-4">
                <slot />
            </main>
        </div>
    </body>
</html>
