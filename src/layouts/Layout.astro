---
import { ViewTransitions } from 'astro:transitions';
import BaseHead, { type Props as HeadProps } from '../components/BaseHead.astro';
import Header from '../components/Header.astro'; 

export type Props = HeadProps & { showHeader?: boolean; headerTitle?: string, headerSubtitle?: string };

const { showHeader = true, headerTitle = null, headerSubtitle = null,  ...head } = Astro.props;
---

<!doctype html>
<html lang="en" class="antialiased break-words">
    <head>
        <BaseHead {...head} />
        <script>
            // Fast theme initialization with validation
            const validThemes = ['gameboy', 'dos', 'commodore64', 'caution', 'sunset', 'neon', 'ocean', 'forest', 'ember', 'violet'];
            
            function applyTheme(themeId: any, isDark: any) {
                document.documentElement.setAttribute('data-theme', themeId);
                document.documentElement.classList.toggle('dark', isDark);
            }

            // Load and apply saved theme with validation
            function initializeTheme() {
                try {
                    const savedMode = localStorage.getItem('theme-mode') || 'light';
                    const savedTheme = localStorage.getItem('theme-id') || 'gameboy';
                    
                    // Validate theme exists in current theme list
                    const theme = validThemes.includes(savedTheme) ? savedTheme : 'gameboy';
                    
                    applyTheme(theme, savedMode === 'dark');
                    
                    // Update localStorage if theme was invalid
                    if (theme !== savedTheme) {
                        localStorage.setItem('theme-id', theme);
                    }
                    
                    // Store current applied theme for React components to sync with
                    window.__APPLIED_THEME__ = theme;
                    window.__APPLIED_MODE__ = savedMode;
                } catch (e) {
                    // Fallback if localStorage fails
                    applyTheme('gameboy', false);
                    window.__APPLIED_THEME__ = 'gameboy';
                    window.__APPLIED_MODE__ = 'light';
                }
            }
            
            // Initialize theme immediately
            initializeTheme();
            
            // Also handle Astro page transitions
            document.addEventListener('astro:page-load', initializeTheme);
        </script>
        <script src="/as-dithered-image.js" is:inline></script>
        <ViewTransitions />
    </head>
    <body class="bg-secondary text-main md:px-10 (--max-w-size:1280px) max-w-[var(--max-w-size)] mx-auto relative">
 
        <Header />
     <div class="mt-8">  
        <main class="text-left px-4">
                <slot />
            </main>
        </div> 
    </body>
</html>
