---
import Tag from './Tag.astro';
import ColumnHeader from '@/components/ColumnHeader.astro';

interface Link {
  href: string;
  text: string;
}

interface Props {
  links: Link[];
}

const { links } = Astro.props;
---

<ColumnHeader title="Tecnologías" />
<div class="relative">
  <button
    class="absolute -left-16 top-1/2 -translate-y-1/2 px-3 py-1 bg-main text-secondary text-sm opacity-0 focus:opacity-100  duration-800 z-10"
    onclick="skipMarquee('previous')"
    aria-label="Saltar marquee anterior"
  >
    Saltar marquee
  </button>
  
  <div class="overflow-hidden relative w-full pb-4 pt-1" id="marquee-container">
    <div class="flex w-max marquee-scroll hover:animate-none" id="marquee-content">
      <ul class="flex items-center flex-shrink-0 space-x-2 pr-2">
        {links.map(link => (
          <li>
            <Tag text={link.text} />
          </li>
        ))}
      </ul>
      <ul class="flex items-center flex-shrink-0 space-x-2 pr-2" aria-hidden="true">
        {links.map(link => (
          <li>
            <Tag text={link.text} />
          </li>
        ))}
      </ul>
      <ul class="flex items-center flex-shrink-0 space-x-2 pr-2" aria-hidden="true">
        {links.map(link => (
          <li>
            <Tag text={link.text} />
          </li>
        ))}
      </ul>
    </div>
  </div>

  <button
    class="absolute -right-16 top-1/2 -translate-y-1/2 px-3 py-1 bg-main text-secondary text-sm opacity-0 focus:opacity-100  duration-800 z-10"
    onclick="skipMarquee('next')"
    aria-label="Saltar marquee siguiente"
  >
    Saltar marquee
  </button>
</div>

<style>
  @keyframes marquee {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-33.333%);
    }
  }
  
  .marquee-scroll {
    animation: marquee 80s linear infinite;
  }
</style>

<script>
  function skipMarquee(direction) {
    const container = document.getElementById('marquee-container');
    if (!container) return;
    
    if (direction === 'previous') {
      // Encontrar el elemento anterior focusable
      const currentFocused = document.activeElement;
      const focusableElements = Array.from(document.querySelectorAll('a, button, input, [tabindex]:not([tabindex="-1"])'));
      const currentIndex = focusableElements.indexOf(currentFocused);
      
      if (currentIndex > 0) {
        focusableElements[currentIndex - 1].focus();
      }
    } else if (direction === 'next') {
      // Encontrar el elemento siguiente focusable después del marquee
      const marqueeContainer = document.getElementById('marquee-container');
      const focusableElements = Array.from(document.querySelectorAll('a, button, input, [tabindex]:not([tabindex="-1"])'));
      
      // Encontrar elementos que vienen después del marquee
      let nextElement = null;
      for (let i = 0; i < focusableElements.length; i++) {
        const element = focusableElements[i];
        if (marqueeContainer.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_FOLLOWING) {
          nextElement = element;
          break;
        }
      }
      
      if (nextElement) {
        nextElement.focus();
      }
    }
  }
  
  // Hacer la función global para que funcione con onclick
  window.skipMarquee = skipMarquee;
</script>
