---
import type { CollectionEntry } from 'astro:content';
import { getTranslations } from '@/i18n/utils';
import { defaultLang, type Language } from '@/i18n/ui';
import { getLocalizedUrl } from '@/utils/localized-routes';
import { getSlugFromId } from '@/utils/content-utils';

interface Props {
    projects: CollectionEntry<'projects'>[];
    startIndex?: number;
    lang?: Language;
}

const { projects, startIndex = 0, lang = defaultLang } = Astro.props;
const t = getTranslations(lang);
---

{projects.length > 0 && (
  <div class="w-full">
    <h2 class="h2 mb-8"> 
      {t('home.allProjects')}
    </h2>

    <!-- Header - Desktop only -->
    <div class="hidden md:flex gap-4 border-b border-main/30  py-2 px-6 bg-main items-center ">
      <div class="flex-[0_0_30%] flex gap-6 items-center">
        <div class="font-mono text-xs font-bold uppercase tracking-widest text-secondary w-[50px]">#</div>
        <div class="font-mono text-xs font-bold uppercase tracking-widest text-secondary flex-1">{t('projects.table.name')}</div>
      </div>
      <div class="flex-1">
        <div class="font-mono text-xs font-bold uppercase tracking-widest text-secondary">{t('projects.table.description')}</div>
      </div>
      <div class="flex-[0_0_48px]">
        <div class="font-mono text-xs font-bold uppercase tracking-widest text-secondary sr-only">Link</div>
      </div>
    </div>

    <!-- Rows -->
    {projects.map((project: CollectionEntry<'projects'>, index: number) => (
      <a
        href={getLocalizedUrl(lang, 'projects', getSlugFromId(project.id))}
        class="project-row flex flex-col md:flex-row gap-3 md:gap-4 border-b-[1px] border-main/30  border-l-main bg-main/[3%] hover:bg-main/[6%] py-5 md:py-3 px-4 md:px-6 cursor-pointer group font-mono hover:no-underline transition-colors"
      >
        <!-- Mobile: Number above title -->
        <div class="md:hidden">
          <span class="text-main font-mono text-sm font-bold opacity-50 group-hover:opacity-100 transition-opacity duration-400 project-number">#{String(startIndex + index + 1).padStart(2, '0')}</span>
        </div>

        <!-- Number + Name (Desktop) / Just Name (Mobile) -->
        <div class="flex-[0_0_100%] md:flex-[0_0_30%] self-start flex gap-6 items-center">
          <!-- Desktop Number -->
          <span class="hidden md:inline text-main font-mono text-xl md:text-lg font-bold opacity-50 group-hover:opacity-100 transition-opacity duration-400 project-number w-[50px]">#{String(startIndex + index + 1).padStart(2, '0')}</span>

          <div class="flex-1">
            <h3 class="h3 !my-0">
              {project.data.name}
            </h3>
          </div>
        </div>

        <!-- Description -->
        <div class="flex-1 self-start">
          <p class="text-body">
            {project.data.hook}
          </p>
        </div>

        <!-- Arrow Icon -->
        <div class="hidden md:flex flex-[0_0_48px] items-center justify-end">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-main project-arrow transition-transform duration-300 group-hover:translate-x-2 group-hover:-translate-y-2">
            <path d="M7 7h10v10"></path>
            <path d="M7 17 17 7"></path>
          </svg>
        </div>
      </a>
    ))}
  </div>
)}
