---
interface Props {
  type: 'vision' | 'detail' | 'simplicity';
}

const { type } = Astro.props;
---

{type === 'vision' && (
  <div class="space-y-2 w-full">
    <div class="bg-main/10 border border-main/30 p-2">
      <div class="flex items-center justify-between">
        <div class="text-sm font-mono text-main font-bold">USUARIO PRIMERO</div>
        <div class="w-3 h-3 bg-main"></div>
      </div>
    </div>
    
    <div class="bg-main/5 border border-main/20 p-2">
      <div class="text-sm font-mono text-main/70">Estrategia → Validación → Implementación</div>
    </div>
    
    <div class="bg-main/5 border border-main/20 p-2">
      <div class="text-sm font-mono text-main font-bold">Impacto medible</div>
    </div>
  </div>
)}

{type === 'detail' && (
  <div class="w-full h-full flex flex-col gap-1">
    <div class="bg-main/10 border border-main/30 p-1.5">
      <div class="flex items-center justify-between">
        <div class="text-xs font-mono text-main font-bold">LIGHTHOUSE SCORE</div>
        <div class="text-xs font-mono text-main font-bold">100</div>
      </div>
    </div>
    
    <div class="flex gap-1">
      <div class="bg-main/5 border border-main/20 p-1.5 flex-1">
        <div class="text-xs font-mono text-main/70">Performance</div>
        <div class="text-xs font-mono text-main font-bold">100</div>
      </div>
      <div class="bg-main/5 border border-main/20 p-1.5 flex-1">
        <div class="text-xs font-mono text-main/70">A11y</div>
        <div class="text-xs font-mono text-main font-bold">100</div>
      </div>
    </div>
    
    <div class="bg-main/10 border border-main/30 p-1.5">
      <div class="text-xs font-mono text-main/70 mb-1">Response Times</div>
      <div class="flex justify-between text-xs font-mono">
        <span class="text-main/70">API avg:</span>
        <span class="text-main font-bold">23ms</span>
      </div>
    </div>
    
    <div class="flex gap-1">
      <div class="bg-main/5 border border-main/20 p-1.5 flex-1">
        <div class="text-xs font-mono text-main/70">Error Rate</div>
        <div class="text-xs font-mono text-main font-bold">0.02%</div>
      </div>
      <div class="bg-main/5 border border-main/20 p-1.5 flex-1">
        <div class="text-xs font-mono text-main/70">Uptime</div>
        <div class="text-xs font-mono text-main font-bold">99.9%</div>
      </div>
    </div>
    
    <div class="bg-main/10 border border-main/30 p-1.5 mt-auto">
      <div class="text-xs font-mono text-main font-bold">2,847 req/min</div>
      <div class="text-xs font-mono text-main/70">Producción real</div>
    </div>
  </div>
)}

{type === 'simplicity' && (
  <div class="space-y-2 w-full">
    <div class="bg-main/10 border border-main/30 p-2">
      <div class="flex items-center justify-between">
        <div class="text-sm font-mono text-main font-bold">MENOS ES MÁS</div>
        <div class="w-3 h-3 bg-main"></div>
      </div>
    </div>
    
    <div class="bg-main/5 border border-main/20 p-2">
      <div class="text-sm font-mono text-main/70">Eliminar → Simplificar → Potenciar</div>
    </div>
    
    <div class="bg-main/5 border border-main/20 p-2">
      <div class="text-sm font-mono text-main font-bold">Máximo impacto</div>
    </div>
  </div>
)}