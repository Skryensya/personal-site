---
export interface Props {
    text: string;
    size?: 'sm' | 'md' | 'lg';
    class?: string;
}

const { text, size = 'md', class: className } = Astro.props;

const sizeClasses = {
    sm: 'w-32 h-32 text-xl',
    md: 'w-48 h-48 text-3xl',
    lg: 'w-64 h-64'
};
---
<div class="p-4 border">

    <div class:list={['isometric-text-card', sizeClasses[size], className]}>
        <div class="isometric-text-container">
            <!-- Generate 10 layers for depth effect -->
            <div class="isometric-text layer-1" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-2" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-3" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-4" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-5" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-6" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-7" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-8" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-9" aria-hidden="true">{text}</div>
            <div class="isometric-text layer-10" aria-hidden="true">{text}</div>
            
            <!-- Main visible text layer -->
            <div class="isometric-text main-layer">{text}</div>
        </div>
    </div>
</div>
    
<style>
    .isometric-text-card {
        --layer-opacity: 0.18;
        /* Square card container with border */
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        perspective: 800px;
        perspective-origin: 50% 150%;
        border: 1px solid rgb(var(--color-main));
    }

    .isometric-text-container {
        position: relative;
        transform-style: preserve-3d;
        transform-origin: center center;
    }

    .isometric-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform-origin: center center;
        font-weight: 900;
        font-family: 'JetBrains Mono', 'IBM Plex Mono', 'Courier New', monospace;
        font-variant-numeric: tabular-nums;
        font-feature-settings: "tnum" 1;
        font-size: 96px;
        white-space: nowrap;
        user-select: none;
        pointer-events: none;
        
        /* Base orthographic 3/4 transformation - opposite direction */
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg);
    }

    /* Main visible layer - now the back/static layer */
    .main-layer {
        color: rgb(var(--color-main));
        z-index: 1;
        opacity: var(--layer-opacity);
    }

    /* Depth layers with progressive left-down offset */
    .layer-1 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(3px);
        opacity: var(--layer-opacity);
        z-index: 2;
        transition: transform 0.3s ease;
    }

    .layer-2 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(6px);
        opacity: var(--layer-opacity);
        z-index: 3;
        transition: transform 0.3s ease;
    }

    .layer-3 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(9px);
        opacity: var(--layer-opacity);
        z-index: 4;
        transition: transform 0.3s ease;
    }

    .layer-4 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(12px);
        opacity: var(--layer-opacity);
        z-index: 5;
        transition: transform 0.3s ease;
    }

    .layer-5 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(15px);
        opacity: var(--layer-opacity);
        z-index: 6;
        transition: transform 0.3s ease;
    }

    .layer-6 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(18px);
        opacity: var(--layer-opacity);
        z-index: 7;
        transition: transform 0.3s ease;
    }

    .layer-7 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(21px);
        opacity: var(--layer-opacity);
        z-index: 8;
        transition: transform 0.3s ease;
    }

    .layer-8 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(24px);
        opacity: var(--layer-opacity);
        z-index: 9;
        transition: transform 0.3s ease;
    }

    .layer-9 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(27px);
        opacity: var(--layer-opacity);
        z-index: 10;
        transition: transform 0.3s ease;
    }

    .layer-10 {
        color: rgb(var(--color-main));
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(30px);
        opacity: var(--layer-opacity);
        z-index: 11;
        transition: transform 0.3s ease;
    }

    /* Hover effect for extra depth */
    .isometric-text-card:hover .isometric-text-container {
        transform: translateZ(10px);
        transition: transform 0.3s ease;
    }

    .isometric-text-card:hover .main-layer {
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(0px);
        transition: transform 0.3s ease;
    }

    /* Enhanced depth layers on hover with increased left-down separation */
    .isometric-text-card:hover .main-layer { opacity: 0.17; }
    .isometric-text-card:hover .layer-1 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(6px);
    }
    .isometric-text-card:hover .layer-2 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(12px);
    }
    .isometric-text-card:hover .layer-3 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(18px);
    }
    .isometric-text-card:hover .layer-4 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(24px);
    }
    .isometric-text-card:hover .layer-5 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(30px);
    }
    .isometric-text-card:hover .layer-6 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(36px);
    }
    .isometric-text-card:hover .layer-7 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(42px);
    }
    .isometric-text-card:hover .layer-8 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(48px);
    }
    .isometric-text-card:hover .layer-9 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(54px);
    }
    .isometric-text-card:hover .layer-10 { 
        opacity: var(--layer-opacity); 
        transform: translate(-50%, -50%) 
                   rotateX(-45deg) 
                   rotateY(-45deg) 
                   rotateZ(0deg) 
                   translateZ(60px);
    }
</style>