---
import Layout from '@/layouts/Layout.astro';
import ContentPage from '@/components/ContentPage.astro';
import Button from '@/components/Button.astro';
import ThemedImage from '@/components/ThemedImage.astro';
import { getTranslations } from '@/i18n/utils';
import { defaultLang, type Language } from '@/i18n/ui';
import { getCollection, type CollectionEntry } from 'astro:content';
import { getSlugFromId } from '@/utils/content-utils';
import { getLocalizedUrl } from '@/utils/localized-routes';

interface Props {
  lang?: Language;
}

const { lang = defaultLang } = Astro.props;
const t = getTranslations(lang);

const meta = {
  es: { title: 'Allison Peña - CV', description: 'CV de Allison Peña' },
  en: { title: 'Allison Peña - Resume', description: "Allison Peña's Resume" },
  no: { title: 'Allison Peña - CV', description: 'Allison Peña CV' }
}[lang];

const downloadLabel = lang === 'es' ? 'Descargar CV' : lang === 'no' ? 'Last ned CV' : 'Download CV';
const downloadFileName = 'Allison_Peña_Desarrollador_fullstack.pdf';
const phoneNumber = '+56 9 9812 0052';
const phoneOffset = 7;
const phoneCharCodes = Array.from(phoneNumber).map((char) => char.charCodeAt(0) + phoneOffset);
const phoneMaskValue: string = t('cv.phone.masked');
const encodeMaskForHtml = (value: string) =>
  Array.from(value)
    .map((char) => {
      if (char === ' ') return '&nbsp;';
      if (char.toUpperCase() === 'X') return char;
      return `&#${char.charCodeAt(0)};`;
    })
    .join('');
const phoneMaskedHtml = encodeMaskForHtml(phoneMaskValue);

const allProjects = await getCollection('projects');
const featuredProjects: CollectionEntry<'projects'>[] = allProjects
  .filter((project) => project.id.startsWith(`${lang}/`) && project.data.isFeatured)
  .filter((project) => project.data.cvDescription)
  .slice(0, 5);
---

<Layout title={meta.title} description={meta.description} lang={lang}>
  <ContentPage contentId="cv-content" lang={lang} contentClassName="space-y-6 md:space-y-10">
    <header class="flex flex-col md:flex-row md:items-center md:justify-between gap-3">
      <h1 class="h2">{t('cv.title')}</h1>
      <div class="flex flex-wrap gap-2">
        <Button href="/cv.pdf" variant="normal" filled elevated download={downloadFileName}>
          {downloadLabel}
        </Button>
      </div>
    </header>

    <section class="bg-secondary border border-main p-4 md:p-6">
      <div class="bg-transparent text-main">
        <div class="w-full">
          <header>
            <div class="flex justify-between items-start">
              <div class="text-left flex-1">
                <h2 class="text-4xl font-bold mb-1 pt-1">{t('cv.fullName')}</h2>
                <p class="text-base font-semibold">{t('cv.jobTitle')}</p>
              </div>
              <a
                href="https://linkedin.com/in/skryensya"
                target="_blank"
                rel="noopener noreferrer"
                class="relative block w-24 lg:w-28 aspect-square ml-6 flex-shrink-0 overflow-hidden rounded-full group"
              >
                <img
                  src="/img/me.png"
                  alt={t('cv.photo.alt.pixelated')}
                  class="absolute inset-0 w-full h-full object-cover transition-opacity duration-300 ease-out group-hover:opacity-0"
                  loading="lazy"
                  decoding="async"
                />
                <img
                  src="/img/true_me.png"
                  alt={t('cv.photo.alt.original')}
                  class="absolute inset-0 w-full h-full object-cover opacity-0 transition-opacity duration-300 ease-out group-hover:opacity-100"
                  loading="lazy"
                  decoding="async"
                />
              </a>
            </div>
          </header>

          <div class="flex flex-col lg:flex-row lg:flex-nowrap gap-5 mb-6">
            <div class="lg:min-w-[210px] space-y-3">
              <section>
                <div class="text-base font-bold uppercase border-b-2 border-main mb-2 mt-6">{t('cv.contact')}</div>

                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-1 gap-2 lg:space-y-2 lg:gap-0">
                  <a
                    href="https://maps.google.com/?q=Santiago,Chile"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex gap-1.5 group"
                  >
                    <svg class="w-4 h-4 text-main mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                      ></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    </svg>
                    <div>
                      <span class="font-bold text-sm block opacity-80">{t('cv.contact.location')}</span>
                      <span class="font-mono text-main block text-sm group-hover:underline">{t('cv.location.value')}</span>
                    </div>
                  </a>


                  <a href="https://linkedin.com/in/skryensya" target="_blank" rel="noopener noreferrer" class="flex gap-1.5 group">
                    <svg class="w-4 h-4 text-main mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.761 0 5-2.239 5-5v-14c0-2.761-2.239-5-5-5zm-11 19h-3v-10h3v10zm-1.5-11.269c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.784 1.764-1.75 1.764zm13.5 11.269h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-10h3v1.539c1.396-2.586 7-2.777 7 2.476v5.985z" />
                    </svg>
                    <div>
                      <span class="font-bold text-sm block opacity-80">{t('cv.contact.linkedin')}</span>
                      <span class="font-mono text-main block text-sm group-hover:underline">{t('cv.linkedin.value')}</span>
                    </div>
                  </a>

                  <a href={`mailto:${t('cv.email.value')}`} class="flex gap-1.5 group">
                    <svg class="w-4 h-4 text-main mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M3 8l7.89 4.73c.7.42 1.52.42 2.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                      ></path>
                    </svg>
                    <div>
                      <span class="font-bold text-sm block opacity-80">{t('cv.contact.email')}</span>
                      <span class="font-mono text-main group-hover:underline group-hover:opacity-70 block text-xs break-all">
                        {t('cv.email.value')}
                      </span>
                    </div>
                  </a>

                  <a
                    class="flex gap-1.5 group"
                    data-phone-link
                    aria-label={t('cv.contact.phone')}
                    role="button"
                    tabindex="0"
                  >
                    <svg class="w-4 h-4 text-main mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M3 5a2 2 0 012-2h3l2 5-2.5 1.5a11 11 0 005.5 5.5L17 12l5 2v3a2 2 0 01-2 2h-1A16 16 0 013 5z"
                      ></path>
                    </svg>
                    <div>
                      <span class="font-bold text-sm block opacity-80">{t('cv.contact.phone')}</span>
                      <span
                        class="font-mono text-main block text-sm group-hover:underline group-hover:opacity-70"
                        data-phone-display
                        aria-live="polite"
                        set:html={phoneMaskedHtml}
                      ></span>
                    </div>
                  </a>

                </div>
              </section>
              <section>
                <h3 class="text-base font-bold uppercase border-b-2 border-main mb-2">{t('cv.languages.title')}</h3>
                <div class="space-y-2">
                  <span class="text-sm font-mono flex justify-between items-center">
                    {t('cv.languages.spanish')}
                    <span
                      class="inline-block bg-main text-secondary px-2 py-0.5 text-[12px] font-medium font-mono tracking-tight"
                    >
                      {t('cv.languages.spanish.level')}
                    </span>
                  </span>
                  <a
                    href="https://www.efset.org/cert/SkBZs2"
                    class="text-sm font-mono flex justify-between items-center group"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    {t('cv.languages.english')}
                    <span
                      class="inline-block bg-main text-secondary px-2 py-0.5 text-[12px] font-medium font-mono tracking-tight"
                    >
                      {t('cv.languages.english.level')}
                    </span>
                  </a>
                  <div class="flex justify-between items-center">
                    <span class="text-sm font-mono">{t('cv.languages.norwegian')}</span>
                    <span
                      class="inline-block bg-main/60 text-secondary px-2 py-0.5 text-[12px] font-bold font-mono tracking-tight"
                    >
                      {t('cv.languages.norwegian.level')}
                    </span>
                  </div>
                </div>
              </section>

              <section>
                <h3 class="text-base font-bold uppercase border-b-2 border-main  mb-4">{t('cv.certificates.title')}</h3>
                <a
                  href="https://courses.edx.org/certificates/6e99aff7d04448078c27ff817f4e1b49"
                  target="_blank"
                  class="space-y-1.5 group"
                  rel="noopener noreferrer"
                >
                  <div class="border-l-4 border-main pl-3">
                    <div class="flex items-center gap-1.5 mb-1">
                      
                      <h4 class="font-bold text-base text-main my-0">{t('cv.certificate.wai01x.title')}</h4>
                    </div>
                    <div class="text-lg group-hover:underline flex">
                      {t('cv.certificate.wai01x.description')}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="lucide lucide-external-link-icon lucide-external-link h-4 w-4 ml-1"
                      >
                        <path d="M15 3h6v6" />
                        <path d="M10 14 21 3" />
                        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                      </svg>
                    </div>
                  </div>
                </a>
              </section>

              <section>
                <h3 class="text-base font-bold uppercase border-b-2 border-main mb-4">{t('cv.references.title')}</h3>
                <div class="space-y-4">
                  <div class="border-l-4 border-main pl-3">
                    <div class="flex items-center gap-1.5 mb-1">
                      <h4 class="font-bold text-body text-main my-0">{t('cv.references.jorge.name')}</h4>
                    </div>
                    <p class="text-sm opacity-80 mb-1">{t('cv.references.position')}</p>
                    <a
                      href={`mailto:${t('cv.references.jorge.email')}`}
                      class="text-xs font-mono text-main hover:underline block break-all"
                    >
                      {t('cv.references.jorge.email')}
                    </a>
                  </div>

                  <div class="border-l-4 border-main pl-3">
                    <div class="flex items-center gap-1.5 mb-1">
                      
                      <h4 class="font-bold text-body text-main my-0">{t('cv.references.elias.name')}</h4>
                    </div>
                    <p class="text-sm opacity-80 mb-1">{t('cv.references.position')}</p>
                    <a
                      href={`mailto:${t('cv.references.elias.email')}`}
                      class="text-xs font-mono text-main hover:underline block break-all"
                    >
                      {t('cv.references.elias.email')}
                    </a>
                  </div>
                </div>
              </section>
            </div>

            <div class="space-y-3">
              <section>
                <h3 class="text-base font-bold uppercase border-b-2 border-main mb-2">{t('cv.about.title')}</h3>
                <p class="text-body-base-sm ">{t('cv.about.content')}</p>
              </section>

              <section>
                <h3 class="text-base font-bold uppercase border-b-2 border-main mb-2">{t('cv.experience.title')}</h3>
                <div class="flex justify-between items-start mb-2">
                  <div>
                    <p class="text-2xl font-bold text-main">{t('cv.experience.company')}</p>
                    <span class="text-xs font-semibold text-main/80">{t('cv.experience.position')}</span>
                  </div>
                  <span class="text-xs font-semibold bg-main text-secondary px-2 py-0.5 mt-1">
                    {t('cv.experience.period')}
                  </span>
                </div>
                <p class="text-sm leading-relaxed  mb-4">{t('cv.experience.description')}</p>

                <div class="mt-3">
                  <h4 class="text-base font-bold uppercase border-b-2 border-main mb-2">{t('cv.projects.title')}</h4>
                  <div class="space-y-2 pl-3 ml-2 border-l">
                    {featuredProjects.map((project) => (
                      <div class="relative">
                        <h5
                          class="font-bold text-sm text-main mb-0.5 relative before:content-[''] before:absolute before:left-[-18px] before:top-[4px] before:h-3 before:w-3 before:rounded-full before:bg-secondary before:border before:border-main"
                        >
                          <a
                            href={getLocalizedUrl(lang, 'projects', getSlugFromId(project.id))}
                            class="hover:underline focus-visible:underline outline-none"
                          >
                            {project.data.name}
                          </a>
                        </h5>
                        <p class="text-[15px] mb-1">{project.data.cvDescription}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </section>
            </div>
          </div>
        </div>
      </div>
    </section>
  </ContentPage>

  <script is:inline type="module" define:vars={{ phoneCharCodes, phoneOffset, phoneMaskValue, phoneMaskedHtml }}>
    const codes = phoneCharCodes;
    const offset = phoneOffset;
    const mask = phoneMaskValue;
    const maskedHtml = phoneMaskedHtml;
    const PHONE_SELECTOR = '[data-phone-link]';

    const decodePhone = () =>
      codes
        .map((code) => String.fromCharCode(code - offset))
        .join('');

    function setupPhoneObfuscation() {
      const link = document.querySelector(PHONE_SELECTOR);
      if (!link) return;

      const display = link.querySelector('[data-phone-display]');
      if (!display) return;

      if (link.dataset.phoneObfuscation === 'true') {
        return;
      }

      link.dataset.phoneObfuscation = 'true';

      let concealTimer = null;
      const phoneValue = decodePhone();
      const sanitizeForTel = (value) => value.replace(/[^+\d]/g, '');
      const telDigits = sanitizeForTel(phoneValue);
      const telHref = `tel:${telDigits}`;
      const displayTel = phoneValue;

      const conceal = () => {
        if (concealTimer) {
          window.clearTimeout(concealTimer);
          concealTimer = null;
        }
        display.innerHTML = maskedHtml;
        display.setAttribute('aria-label', mask);
        link.removeAttribute('href');
        link.removeAttribute('title');
        link.dataset.revealed = 'false';
      };

      const scheduleConceal = (delay = 1500) => {
        if (concealTimer) {
          window.clearTimeout(concealTimer);
          concealTimer = null;
        }
        concealTimer = window.setTimeout(() => {
          conceal();
        }, delay);
      };

      const reveal = () => {
        if (link.dataset.revealed === 'true') return;
        if (concealTimer) {
          window.clearTimeout(concealTimer);
          concealTimer = null;
        }
        display.textContent = phoneValue;
        display.setAttribute('aria-label', phoneValue);
        link.setAttribute('href', telHref);
        link.setAttribute('title', displayTel);
        link.dataset.revealed = 'true';
      };

      // Initialize masked state
      conceal();

      link.addEventListener('mouseenter', () => {
        reveal();
      });

      link.addEventListener('mouseleave', () => {
        scheduleConceal(0);
      });

      link.addEventListener('focusin', () => {
        reveal();
      });

      link.addEventListener('focusout', () => {
        scheduleConceal(0);
      });

      link.addEventListener(
        'touchstart',
        () => {
          reveal();
          scheduleConceal(5000);
        },
        { passive: true }
      );

      link.addEventListener('click', (event) => {
        if (link.dataset.revealed !== 'true') {
          event.preventDefault();
          reveal();
        }
        scheduleConceal(5000);
      });

      link.addEventListener('keydown', (event) => {
        if (event.key === 'Enter' || event.key === ' ') {
          if (link.dataset.revealed !== 'true') {
            event.preventDefault();
            reveal();
          }
          scheduleConceal(5000);
        }
      });
    }

    const init = () => {
      setupPhoneObfuscation();
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', init, { once: true });
    } else {
      init();
    }

    document.addEventListener('astro:page-load', init);
  </script>
</Layout>
