---
import { type CollectionEntry } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import { getSlugFromId } from '@/utils/content-utils';
import { getTranslations } from '@/i18n/utils';
import { defaultLang, type Language } from '@/i18n/ui';
import { ProyectStack } from '@/components/ProyectStack.tsx';

interface Props {
    lang?: Language;
    projects: CollectionEntry<'projects'>[];
}

const {
    lang = defaultLang,
    projects
} = Astro.props;

const t = getTranslations(lang);

// Get the correct projects path for each language
const getProjectsPath = (language: Language) => {
    switch (language) {
        case 'en':
            return '/en/projects';
        case 'no':
            return '/no/prosjekter';
        default:
            return '/proyectos';
    }
};

const projectsPath = getProjectsPath(lang);
---

<Layout
    title={t('nav.projects')}
    description={t('nav.projects')}
    showHeader={true}
    headerTitle={t('nav.projects')}
    headerSubtitle={t('nav.projects')}
    lang={lang}
>
    <h1 class="mb-12 text-2xl leading-tight font-mono sm:mb-16 sm:text-4xl">{t('nav.projects')}</h1>

    <ProyectStack client:visible ></ProyectStack>
</Layout>