---
import { type CollectionEntry } from 'astro:content';
import Layout from '../layouts/Layout.astro';   
import ThemedImage from './ThemedImage.astro';
import Button from './Button.astro';
import ContentPage from './ContentPage.astro';

interface Props {
    projectsByLang: Record<string, CollectionEntry<'projects'>>;
    slug: string;
    currentLocale: "es" | "en" | "no";
}

const { projectsByLang, slug, currentLocale } = Astro.props;

// Get the project for the current language, fallback to Spanish if not available
const project = projectsByLang[currentLocale] || projectsByLang['es'] || Object.values(projectsByLang)[0];

if (!project) {
    return Astro.redirect('/404');
}

const { name, hook, seo, clientLogo, audioUrl } = project.data;
const { Content } = await project.render();
---

<Layout title={seo?.title ?? name} description={seo?.description ?? hook} image={seo?.image} pageType="article" showHeader={true} lang={currentLocale}>
    <article class="min-h-screen">
        <ContentPage 
            contentId="project-content"
            sidebarClassName="w-48"
            contentClassName="md:mb-64"
        >
                <!-- Content with project header -->
                <div class="py-8 px-2 lg:px-4 lg:py-4 flex flex-col items-center">
                    <!-- Project Title and Hook - Part of Content -->
                    <header class="pb-8 border-b border-dotted border-main/30 w-full" style="max-width: var(--paragraph-max-width)">
                        <!-- Project Name and Reading Time -->
                        <div class="flex justify-between items-center mb-8">
                            <div class="text-base font-mono font-medium text-main opacity-60 uppercase tracking-wider" style={`view-transition-name: project-content-${project.slug}`}>
                                {name}
                            </div>
                            <div class="text-sm font-mono font-medium text-main opacity-50 uppercase tracking-wider" id="reading-time">
                                Calculando...
                            </div>
                        </div>
                        
                        <!-- Hook - Main Focus -->
                        {hook && (
                            <h1 class="text-2xl sm:text-3xl lg:text-4xl leading-snug text-main font-bold mb-10 text-pretty" style="max-width: var(--paragraph-max-width)">
                                {hook}
                            </h1>
                        )}
                        
                        <!-- Metrics Section - Supporting Data -->
                        <section class="mt-12" aria-labelledby="metrics-heading">
                            <h3 id="metrics-heading" class="text-xs font-mono font-medium text-main mb-4 uppercase tracking-widest opacity-75">Alcance del ecosistema</h3>
                            <p class="text-sm text-main opacity-70 mb-6 max-w-prose">
                                La infraestructura digital que desarrollé impacta directamente a toda la comunidad UC, desde estudiantes hasta docentes y personal administrativo.
                            </p>
                            
                            <!-- Mobile: Stack vertically in 2 columns -->
                            <div class="grid grid-cols-2 gap-2 sm:hidden" id="metrics-container-mobile" role="list" aria-label="Estadísticas del ecosistema UC">
                                <div class="bg-main text-secondary px-2 py-2 border border-main" role="listitem">
                                    <div class="text-lg font-mono font-bold mb-1" data-target="33000" aria-label="33,000 alumnos">0</div>
                                    <div class="text-xs font-mono leading-tight" aria-hidden="true">alumnos<br/>activos</div>
                                </div>
                                <div class="bg-secondary text-main px-2 py-2 border border-main" role="listitem">
                                    <div class="text-lg font-mono font-bold mb-1" data-target="3500" aria-label="3,500 profesores">0</div>
                                    <div class="text-xs font-mono leading-tight" aria-hidden="true">profesores<br/>y staff</div>
                                </div>
                                <div class="bg-secondary text-main px-2 py-2 border border-main" role="listitem">
                                    <div class="text-lg font-mono font-bold mb-1" data-target="6500" aria-label="6,500 nuevos ingresantes">0</div>
                                    <div class="text-xs font-mono leading-tight" aria-hidden="true">nuevos<br/>ingresantes</div>
                                </div>
                                <div class="bg-main text-secondary px-2 py-2 border border-main" role="listitem">
                                    <div class="text-lg font-mono font-bold mb-1" data-target="100" aria-label="Más de 100 sitios institucionales">0<span aria-hidden="true">+</span></div>
                                    <div class="text-xs font-mono leading-tight" aria-hidden="true">sitios<br/>institucionales</div>
                                </div>
                            </div>

                            <!-- Desktop: Horizontal layout -->
                            <div class="hidden sm:flex flex-wrap gap-3" id="metrics-container-desktop" role="list" aria-label="Estadísticas del ecosistema UC" style="max-width: var(--paragraph-max-width)">
                                <div class="bg-main text-secondary px-3 py-2 border border-main min-w-[100px]" role="listitem">
                                    <div class="text-lg font-mono font-bold text-left" data-target="33000" aria-label="33,000 alumnos">0</div>
                                    <div class="text-xs font-mono text-left whitespace-nowrap" aria-hidden="true">alumnos activos</div>
                                </div>
                                <div class="bg-secondary text-main px-3 py-2 border border-main min-w-[100px]" role="listitem">
                                    <div class="text-lg font-mono font-bold text-left" data-target="3500" aria-label="3,500 profesores">0</div>
                                    <div class="text-xs font-mono text-left whitespace-nowrap" aria-hidden="true">profesores y staff</div>
                                </div>
                                <div class="bg-main text-secondary px-3 py-2 border border-main min-w-[110px]" role="listitem">
                                    <div class="text-lg font-mono font-bold text-left" data-target="6500" aria-label="6,500 nuevos ingresantes">0</div>
                                    <div class="text-xs font-mono text-left whitespace-nowrap" aria-hidden="true">nuevos ingresantes</div>
                                </div>
                                <div class="bg-secondary text-main px-3 py-2 border border-main min-w-[120px]" role="listitem">
                                    <div class="text-lg font-mono font-bold text-left" data-target="100" aria-label="Más de 100 sitios institucionales">0<span aria-hidden="true">+</span></div>
                                    <div class="text-xs font-mono text-left whitespace-nowrap" aria-hidden="true">sitios institucionales</div>
                                </div>
                            </div>
                        </section>
                        
                        {clientLogo && (
                            <div class="mt-8 w-32 h-32" style={`view-transition-name: project-logo-${project.slug}`} data-client-logo={clientLogo}>
                                <ThemedImage 
                                    src={clientLogo} 
                                    alt={`Logo del cliente - ${name}`}
                                    class="w-full h-full"
                                />
                            </div>
                        )}
                    </header>
                    
                    <!-- Article Content -->
                    <div class="prose w-full [&>p]:text-base [&>p]:lg:text-lg [&>p]:leading-relaxed [&>p]:mb-6 [&>h1]:text-4xl [&>h1]:font-bold [&>h1]:mt-12 [&>h1]:mb-6 [&>h1]:scroll-mt-12 [&>h2]:text-3xl [&>h2]:font-bold [&>h2]:mt-10 [&>h2]:mb-4 [&>h2]:scroll-mt-12 [&>h3]:text-2xl [&>h3]:font-semibold [&>h3]:mt-8 [&>h3]:mb-3 [&>h3]:scroll-mt-12 [&>h4]:text-xl [&>h4]:font-semibold [&>h4]:mt-6 [&>h4]:mb-2 [&>h4]:scroll-mt-12 [&>h5]:scroll-mt-12 [&>h6]:scroll-mt-12" style="max-width: var(--paragraph-max-width)">
                        <Content />
                    </div>
                </div>
        </ContentPage>

        <script define:vars={{ audioUrl, name }}>

            function animateNumbers() {
                const numberElements = document.querySelectorAll('#metrics-container-mobile [data-target], #metrics-container-desktop [data-target]');
                
                numberElements.forEach(element => {
                    const target = parseInt(element.getAttribute('data-target') || '0');
                    const duration = 3500; // 3.5 seconds for slower animation
                    const startTime = performance.now();
                    
                    function updateNumber(currentTime: number) {
                        const elapsed = currentTime - startTime;
                        const progress = Math.min(elapsed / duration, 1);
                        
                        // More dramatic easing - slower as it approaches target
                        const easeOutQuart = 1 - Math.pow(1 - progress, 4);
                        
                        // Add deceleration curve for the final approach
                        const finalProgress = progress < 0.8 ? easeOutQuart : 
                            easeOutQuart + (1 - easeOutQuart) * Math.pow((progress - 0.8) / 0.2, 3);
                        
                        const currentValue = Math.floor(target * finalProgress);
                        
                        // Format number with commas for thousands
                        element.textContent = currentValue.toLocaleString();
                        
                        if (progress < 1) {
                            requestAnimationFrame(updateNumber);
                        }
                    }
                    
                    requestAnimationFrame(updateNumber);
                });
            }

            function calculateReadingTime() {
                const readingTimeElement = document.getElementById('reading-time');
                if (!readingTimeElement) return;
                
                // Get only the prose content (exclude header, sidebar, etc.)
                const proseElement = document.querySelector('.prose');
                if (!proseElement) return;
                
                // Clone the element to manipulate without affecting the original
                const contentClone = proseElement.cloneNode(true) as Element;
                
                // Remove code blocks (they read slower)
                const codeBlocks = contentClone.querySelectorAll('pre, code');
                codeBlocks.forEach((block: Element) => block.remove());
                
                // Remove headings from word count (they're scanned, not read)
                const headings = contentClone.querySelectorAll('h1, h2, h3, h4, h5, h6');
                headings.forEach((heading: Element) => heading.remove());
                
                // Extract clean text content
                const textContent = contentClone.textContent || '';
                
                // More sophisticated word counting
                const words = textContent
                    .trim()
                    .replace(/\s+/g, ' ') // Normalize whitespace
                    .split(' ')
                    .filter((word: string) => 
                        word.length > 0 && 
                        !/^[^\w]*$/.test(word) && // Filter out punctuation-only "words"
                        word.length > 1 // Filter out single characters
                    );
                
                const wordCount = words.length;
                
                // Add time for code blocks (slower reading)
                const codeWordCount = Array.from(codeBlocks).reduce((count: number, block: Element) => {
                    const codeText = block.textContent || '';
                    const codeWords = codeText.trim().split(/\s+/).filter((word: string) => word.length > 0);
                    return count + codeWords.length;
                }, 0);
                
                // Add time for headings (quick scanning)
                const headingWordCount = Array.from(headings).reduce((count: number, heading: Element) => {
                    const headingText = heading.textContent || '';
                    const headingWords = headingText.trim().split(/\s+/).filter((word: string) => word.length > 0);
                    return count + headingWords.length;
                }, 0);
                
                // More conservative reading speeds (slower, more realistic for all users)
                const regularWordsPerMinute = 180; // Regular text (more conservative)
                const codeWordsPerMinute = 60;     // Code (much slower, needs analysis)
                const headingWordsPerMinute = 300; // Headings (moderate scanning speed)
                
                const regularTime = wordCount / regularWordsPerMinute;
                const codeTime = codeWordCount / codeWordsPerMinute;
                const headingTime = headingWordCount / headingWordsPerMinute;
                
                const totalMinutes = Math.ceil(regularTime + codeTime + headingTime);
                
                // Minimum 2 minutes for any substantial content
                const readingTimeMinutes = Math.max(2, totalMinutes);
                
                // Format the reading time
                const readingTimeText = readingTimeMinutes === 1 
                    ? '1 min lectura' 
                    : `${readingTimeMinutes} min lectura`;
                
                readingTimeElement.textContent = readingTimeText;
            }



            function initPage() {
                console.log('ProjectPage: initPage called');
                
                // Calculate reading time
                calculateReadingTime();
                
                // Animate metrics numbers
                setTimeout(animateNumbers, 500); // Start animation after page loads
                
                // Set audio information for the player if available
                if (audioUrl && typeof window !== 'undefined') {
                    console.log('Setting audio data for player:', { audioUrl, name });
                    
                    // Store audio data globally for the player to access
                    window.__AUDIO_DATA__ = {
                        url: audioUrl,
                        title: name
                    };
                    
                    // Dispatch event to notify player
                    const audioDataEvent = new CustomEvent('audioDataAvailable', {
                        detail: { url: audioUrl, title: name }
                    });
                    document.dispatchEvent(audioDataEvent);
                } else if (typeof window !== 'undefined') {
                    // Clear audio data if no audio URL is available
                    delete window.__AUDIO_DATA__;
                }
                
                // Reading guide toggle is handled by the ReadingGuide component
                // Table of contents is handled by the TableOfContents component
            }

            // Run on page load
            document.addEventListener('DOMContentLoaded', initPage);
            
            // Run on Astro page transitions
            document.addEventListener('astro:page-load', initPage);
        </script>
    </article>
    {
        // (prevProject || nextProject) && (
        //     <div class="my-16 sm:my-24 ">
        //         <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Sigue leyendo</h2>
        //         {nextProject && <ProjectPreview project={nextProject} class="mb-10 sm:mb-12" headingLevel="h3" />}
        //         {prevProject && <ProjectPreview project={prevProject} class="mb-10 sm:mb-12" headingLevel="h3" />}
        //     </div>
        // )
    }
</Layout>

<!-- Preload client logo -->
{clientLogo && <link rel="preload" as="image" href={clientLogo} />}