---
export interface Props {
  href?: string;
  type?: 'primary' | 'secondary' | 'cta';
  size?: 'small' | 'medium' | 'large';
  class?: string;
}

const { 
  href, 
  type = 'primary', 
  size = 'medium',
  class: className = ''
} = Astro.props;

const Tag = href ? 'a' : 'button';
---

<Tag 
  class={`btn btn--${type} btn--${size} ${className}`}
  href={href}
>
  <slot />
</Tag>

<style>
  .btn {
    @apply relative inline-block font-bold uppercase tracking-wide cursor-pointer;
    border: 4px solid rgb(var(--color-button-shadow));
    text-decoration: none;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translate(0, 0);
    box-shadow: 
      8px 8px 0px rgb(var(--color-button-shadow)),
      0 0 0 0 rgb(var(--color-button-glow) / 0.2);
    overflow: hidden;
  }

  .btn:hover {
    box-shadow: 
      12px 12px 0px rgb(var(--color-button-shadow)),
      0 0 20px 0 rgb(var(--color-button-glow) / 0.5);
  }

  .btn:active {
    transform: translate(8px, 8px);
    box-shadow: 
      0px 0px 0px rgb(var(--color-button-shadow)),
      0 0 5px 0 rgb(var(--color-button-glow) / 0.8);
  }

  /* Primary Button */
  .btn--primary {
    background: rgb(var(--color-accent));
    color: rgb(var(--color-bg-main));
  }

  /* Secondary Button */
  .btn--secondary {
    background: transparent;
    color: rgb(var(--color-text-main));
  }

  .btn--secondary:hover {
    background: rgb(var(--color-bg-muted));
  }

  /* CTA Button */
  .btn--cta {
    background: rgb(var(--color-cta));
    color: white;
    border-color: rgb(var(--color-button-shadow));
    box-shadow: 
      8px 8px 0px rgb(var(--color-button-shadow)),
      0 0 0 0 rgb(var(--color-cta) / 0.3);
  }

  .btn--cta:hover {
    background: rgb(var(--color-cta-hover));
    box-shadow: 
      12px 12px 0px rgb(var(--color-button-shadow)),
      0 0 25px 0 rgb(var(--color-cta) / 0.6);
  }

  .btn--cta:active {
    box-shadow: 
      0px 0px 0px rgb(var(--color-button-shadow)),
      0 0 10px 0 rgb(var(--color-cta) / 0.9);
  }

  /* Sizes */
  .btn--small {
    @apply px-3 py-2 text-xs;
  }

  .btn--medium {
    @apply px-6 py-3 text-sm;
  }

  .btn--large {
    @apply px-8 py-4 text-base;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.btn');
    
    buttons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        
        // Wait for the press animation to complete before navigating
        setTimeout(() => {
          const href = button.getAttribute('href');
          if (href) {
            if (href.startsWith('mailto:')) {
              window.location.href = href;
            } else {
              window.location.href = href;
            }
          }
        }, 300);
      });
    });
  });
</script>