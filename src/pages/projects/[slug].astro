---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';  
import { sortItemsByDateDesc } from '../../utils/data-utils';
import { getLocaleFromUrl } from '@/utils/i18n';
import { getCollectionByLanguage, getSlugFromId, getLanguageFromId, getAlternativeLanguages } from '@/utils/content-utils';
import DitheredImageReact from '../../components/DitheredImageReact'; 

export async function getStaticPaths() {
    const allProjects = await getCollection('projects');
    
    // Generate paths for all projects in all languages
    return allProjects.map((project) => {
        const slug = getSlugFromId(project.id);
        const language = getLanguageFromId(project.id);
        
        return {
            params: { slug },
            props: { 
                project,
                language,
                slug
            }
        };
    });
}

type Props = { 
    project: CollectionEntry<'projects'>; 
    language: string;
    slug: string;
};

const { project, language, slug } = Astro.props;
const currentLocale = getLocaleFromUrl(Astro.url);

// Get projects in the current language for navigation
const projectsInLanguage = (await getCollectionByLanguage('projects', currentLocale)).sort(sortItemsByDateDesc);
const currentIndex = projectsInLanguage.findIndex(p => getSlugFromId(p.id) === slug);
const prevProject = currentIndex + 1 < projectsInLanguage.length ? projectsInLanguage[currentIndex + 1] : null;
const nextProject = currentIndex > 0 ? projectsInLanguage[currentIndex - 1] : null;

// Get alternative language versions
const alternatives = await getAlternativeLanguages('projects', slug, currentLocale);

const { title, description, seo, color, clientLogo } = project.data;
const { src, alt, caption } = seo?.image || {};
const { Content } = await project.render();
---

<Layout title={seo?.title ?? title} description={seo?.description ?? description} image={seo?.image} pageType="article" showHeader={false}>
    <article class="py-12 sm:py-16 lg:py-24">
        <header class="flex flex-col lg:flex-row gap-8 mb-12 sm:mb-16 lg:mb-20 min-h-[60vh] items-center">
            <!-- Hero content - Left side -->
            <div class="flex-1 flex flex-col justify-center">
                <h1 class="text-5xl sm:text-6xl lg:text-7xl font-bold leading-tight font-mono mb-8 sm:mb-12" style={`view-transition-name: project-content-${project.slug}`}>
                    {title}
                </h1>
                {description && (
                    <p class="text-xl sm:text-2xl leading-relaxed text-secondary opacity-80 font-light">
                        {description}
                    </p>
                )}
            </div>
            
            <!-- Image - Right side -->
            {clientLogo && (
                <div class="flex-shrink-0 w-64 sm:w-80 lg:w-96" style={`view-transition-name: project-logo-${project.slug}`} data-client-logo={clientLogo}>
                    <DitheredImageReact 
                        src={clientLogo} 
                        alt={`Logo del cliente - ${title}`}
                        className="w-full h-auto object-contain"
                        respectOriginalSize={true}
                        client:load
                    />
                </div>
            )}
        </header>
        
        <div class="prose prose-lg sm:prose-xl lg:prose-2xl max-w-none prose-headings:font-mono prose-headings:font-bold prose-p:leading-relaxed prose-p:mb-6 prose-li:mb-2 prose-blockquote:border-l-4 prose-blockquote:border-main prose-blockquote:pl-6 prose-blockquote:italic prose-code:bg-secondary prose-code:px-2 prose-code:py-1 prose-code:rounded prose-code:font-mono prose-code:text-sm">
            <Content />
        </div>
    </article>
    {
        // (prevProject || nextProject) && (
        //     <div class="my-16 sm:my-24 ">
        //         <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Sigue leyendo</h2>
        //         {nextProject && <ProjectPreview project={nextProject} class="mb-10 sm:mb-12" headingLevel="h3" />}
        //         {prevProject && <ProjectPreview project={prevProject} class="mb-10 sm:mb-12" headingLevel="h3" />}
        //     </div>
        // )
    }
</Layout>

<!-- Preload client logo -->
{clientLogo && <link rel="preload" as="image" href={clientLogo} />}
