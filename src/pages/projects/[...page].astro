---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro'; 
import siteConfig from '../../data/site-config';
import { sortItemsByDateDesc } from '../../utils/data-utils';
import { getLangFromUrl } from '@/i18n/utils';
import { getProjectsByLanguage } from '@/utils/content-utils';
import { useTranslations } from '@/i18n/utils';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    // Generate paginated paths for each language
    const allProjects = await getCollection('projects');
    const languages = ['es', 'en', 'no'] as const;
    
    const paths = [];
    for (const lang of languages) {
        const projectsInLang = allProjects
            .filter(project => project.id.startsWith(`${lang}/`))
            .sort(sortItemsByDateDesc);
        
        const paginatedPaths = paginate(projectsInLang, { 
            pageSize: siteConfig.projectsPerPage || 6,
            params: { lang },
            props: { language: lang }
        });
        
        paths.push(...paginatedPaths);
    }
    
    return paths;
}

type Props = { 
    page: Page<CollectionEntry<'projects'>>; 
    language: string;
};

const { page, language } = Astro.props;
const currentLocale = getLangFromUrl(Astro.url);
const t = useTranslations(currentLocale);

// Filter projects to show only those in the current language
const projectsInCurrentLang = (await getProjectsByLanguage(currentLocale)).sort(sortItemsByDateDesc);
const portfolio = page.data;
---

<Layout
    title={t('nav.projects')}
    description={t('nav.projects')}
    showHeader={true}
    headerTitle={t('nav.projects')}
    headerSubtitle={t('nav.projects')}
>
    <h1 class="mb-12 text-2xl leading-tight font-serif italic sm:mb-16 sm:text-4xl">{t('nav.projects')}</h1>
    <!-- <div class="grid grid-cols-1 gap-8 md:grid-cols-2">
        {portfolio.map((project) => <ProjectCard project={project} />)}
    </div>
    <Pagination page={page} class="my-8 sm:my-12" /> -->
</Layout>
