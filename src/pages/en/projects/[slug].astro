---
import { type CollectionEntry, getCollection } from 'astro:content';
import { getSlugFromId, getLanguageFromId } from '@/utils/content-utils';
import ProjectPage from '../../../components/ProjectPage.astro';

export async function getStaticPaths() {
    const allProjects = await getCollection('projects');
    const paths: any[] = [];
    
    // Group projects by slug
    const projectsBySlug = new Map();
    
    allProjects.forEach((project) => {
        const slug = getSlugFromId(project.id);
        const language = getLanguageFromId(project.id);
        
        if (!projectsBySlug.has(slug)) {
            projectsBySlug.set(slug, {});
        }
        projectsBySlug.get(slug)[language] = project;
    });
    
    // Generate paths for English projects
    for (const [slug, projectsByLang] of projectsBySlug) {
        // Only generate if English version exists
        if (projectsByLang['en']) {
            paths.push({
                params: { slug },
                props: { 
                    projectsByLang,
                    slug
                }
            });
        }
    }
    
    return paths;
}

type Props = { 
    projectsByLang: Record<string, CollectionEntry<'projects'>>;
    slug: string;
};

const { projectsByLang, slug } = Astro.props;
const currentLocale = 'en';
---

<ProjectPage 
    projectsByLang={projectsByLang}
    slug={slug}
    currentLocale={currentLocale}
/>