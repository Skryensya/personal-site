---
import ComponentShowcaseLayout from '@/layouts/ComponentShowcaseLayout.astro';

const showCode = Astro.url.searchParams.get('code') === 'true';

// Read the component files for code display
const buttonCSS = await Astro.glob('/src/components/showcase/vanilla/button/button.css').then(files => 
  files[0]?.default || ''
);

const buttonJS = await Astro.glob('/src/components/showcase/vanilla/button/button.js').then(files => 
  files[0]?.default || ''
);
---

<ComponentShowcaseLayout 
  title="Button Component" 
  componentName="Button" 
  technology="Vanilla"
>
  {showCode ? (
    <div style="padding: 2rem; background: #000; color: #fff; height: 100%; overflow-y: auto;">
      <h2 style="font-family: 'JetBrains Mono', monospace; font-size: 1.5rem; margin-bottom: 2rem; color: #fff; border-bottom: 2px solid #fff; padding-bottom: 1rem;">
        Button Component Code
      </h2>
      
      <div style="margin-bottom: 3rem;">
        <h3 style="font-family: 'JetBrains Mono', monospace; font-size: 1.2rem; margin-bottom: 1rem; color: #fff; background: #fff; color: #000; padding: 0.5rem;">
          CSS (button.css)
        </h3>
        <pre style="background: #111; border: 1px solid #fff; padding: 1.5rem; overflow-x: auto; font-family: 'JetBrains Mono', monospace; font-size: 0.9rem; line-height: 1.4;"><code>{`/* Isolated Button Styles */
.showcase-button {
  font-family: 'JetBrains Mono', monospace;
  background: #000;
  color: #fff;
  border: 2px solid #fff;
  padding: 12px 24px;
  font-size: 14px;
  font-weight: bold;
  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: none;
}

.showcase-button:hover {
  background: #fff;
  color: #000;
}

.showcase-button:active {
  background: #ccc;
  color: #000;
}

.showcase-button--secondary {
  background: #fff;
  color: #000;
}

.showcase-button--secondary:hover {
  background: #000;
  color: #fff;
}

.showcase-button--large {
  padding: 16px 32px;
  font-size: 16px;
}

.showcase-button--small {
  padding: 8px 16px;
  font-size: 12px;
}`}</code></pre>
      </div>
      
      <div style="margin-bottom: 3rem;">
        <h3 style="font-family: 'JetBrains Mono', monospace; font-size: 1.2rem; margin-bottom: 1rem; color: #fff; background: #fff; color: #000; padding: 0.5rem;">
          JavaScript (button.js)
        </h3>
        <pre style="background: #111; border: 1px solid #fff; padding: 1.5rem; overflow-x: auto; font-family: 'JetBrains Mono', monospace; font-size: 0.9rem; line-height: 1.4;"><code>{`// Vanilla Button Component
class ShowcaseButton {
  constructor(element, options = {}) {
    this.element = element;
    this.options = {
      variant: 'primary',
      size: 'medium',
      onClick: () => {},
      ...options
    };
    
    this.init();
  }
  
  init() {
    this.element.className = \`showcase-button \${this.getVariantClass()} \${this.getSizeClass()}\`;
    this.element.addEventListener('click', this.handleClick.bind(this));
  }
  
  getVariantClass() {
    return this.options.variant === 'secondary' ? 'showcase-button--secondary' : '';
  }
  
  getSizeClass() {
    switch (this.options.size) {
      case 'large': return 'showcase-button--large';
      case 'small': return 'showcase-button--small';
      default: return '';
    }
  }
  
  handleClick(event) {
    // Add click effect
    this.element.style.transform = 'scale(0.98)';
    setTimeout(() => {
      this.element.style.transform = 'scale(1)';
    }, 100);
    
    this.options.onClick(event);
  }
}

// Auto-initialize buttons
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('[data-showcase-button]').forEach(button => {
    const options = {
      variant: button.dataset.variant || 'primary',
      size: button.dataset.size || 'medium',
      onClick: () => {
        if (button.dataset.action) {
          console.log(\`Button clicked: \${button.dataset.action}\`);
        }
      }
    };
    
    new ShowcaseButton(button, options);
  });
});`}</code></pre>
      </div>
      
      <div>
        <h3 style="font-family: 'JetBrains Mono', monospace; font-size: 1.2rem; margin-bottom: 1rem; color: #fff; background: #fff; color: #000; padding: 0.5rem;">
          Usage Example
        </h3>
        <pre style="background: #111; border: 1px solid #fff; padding: 1.5rem; overflow-x: auto; font-family: 'JetBrains Mono', monospace; font-size: 0.9rem; line-height: 1.4;"><code>{`<!-- HTML -->
<button data-showcase-button data-variant="primary" data-size="medium" data-action="primary-click">
  Primary Button
</button>

<button data-showcase-button data-variant="secondary" data-size="large" data-action="secondary-click">
  Secondary Large
</button>

<button data-showcase-button data-variant="primary" data-size="small" data-action="small-click">
  Small Button
</button>`}</code></pre>
      </div>
    </div>
  ) : (
    <div style="padding: 3rem; background: #000; color: #fff; min-height: 100%; display: flex; flex-direction: column; justify-content: center; align-items: center; gap: 2rem;">
      <link rel="stylesheet" href="/src/components/showcase/vanilla/button/button.css" />
      
      <h2 style="font-family: 'JetBrains Mono', monospace; font-size: 1.5rem; margin-bottom: 2rem; color: #fff; text-align: center;">
        Vanilla Button Component
      </h2>
      
      <div style="display: flex; flex-direction: column; gap: 1.5rem; align-items: center;">
        <button data-showcase-button data-variant="primary" data-size="medium" data-action="primary-click">
          Primary Button
        </button>
        
        <button data-showcase-button data-variant="secondary" data-size="medium" data-action="secondary-click">
          Secondary Button
        </button>
        
        <button data-showcase-button data-variant="primary" data-size="large" data-action="large-click">
          Large Button
        </button>
        
        <button data-showcase-button data-variant="primary" data-size="small" data-action="small-click">
          Small Button
        </button>
      </div>
      
      <p style="font-family: 'JetBrains Mono', monospace; font-size: 0.9rem; color: #ccc; text-align: center; margin-top: 2rem;">
        Click the buttons to see the interaction effects.<br/>
        Check the console for click events.
      </p>
      
      <script src="/src/components/showcase/vanilla/button/button.js"></script>
    </div>
  )}
</ComponentShowcaseLayout>